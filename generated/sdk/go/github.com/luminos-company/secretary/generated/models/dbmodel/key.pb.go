// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: models/dbmodel/key.proto

package dbmodel

import (
	types "github.com/luminos-company/secretary/generated/types"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *types.ID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrivateKey    string           `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey     string           `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ShouldRotate  bool             `protobuf:"varint,4,opt,name=should_rotate,json=shouldRotate,proto3" json:"should_rotate,omitempty"`
	RotatedFromId *string          `protobuf:"bytes,5,opt,name=rotated_from_id,json=rotatedFromId,proto3,oneof" json:"rotated_from_id,omitempty"`
	RotateCron    string           `protobuf:"bytes,6,opt,name=rotate_cron,json=rotateCron,proto3" json:"rotate_cron,omitempty"`
	ExpiresAt     *types.Timestamp `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	UpdatedAt     *types.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt     *types.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt     *types.DeletedAt `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_dbmodel_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_models_dbmodel_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_models_dbmodel_key_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetId() *types.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Key) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *Key) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Key) GetShouldRotate() bool {
	if x != nil {
		return x.ShouldRotate
	}
	return false
}

func (x *Key) GetRotatedFromId() string {
	if x != nil && x.RotatedFromId != nil {
		return *x.RotatedFromId
	}
	return ""
}

func (x *Key) GetRotateCron() string {
	if x != nil {
		return x.RotateCron
	}
	return ""
}

func (x *Key) GetExpiresAt() *types.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Key) GetUpdatedAt() *types.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Key) GetCreatedAt() *types.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Key) GetDeletedAt() *types.DeletedAt {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_models_dbmodel_key_proto protoreflect.FileDescriptor

var file_models_dbmodel_key_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x64, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x11, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9c, 0x07, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44,
	0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22,
	0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b,
	0x65, 0x79, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84,
	0x9e, 0x03, 0x12, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x22, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x64, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x3f, 0x9a, 0x84, 0x9e, 0x03, 0x3a, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3b, 0x20,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x22,
	0x52, 0x0c, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x55,
	0x0a, 0x0f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0x9a, 0x84, 0x9e, 0x03, 0x23, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x0b, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x9a, 0x84, 0x9e, 0x03,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x6f, 0x6e, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x3a, 0x27, 0x30, 0x20, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x2a, 0x20, 0x2a, 0x27, 0x22,
	0x52, 0x0a, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x35, 0x9a, 0x84, 0x9e, 0x03, 0x30, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x22, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x76, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x45, 0x9a, 0x84, 0x9e, 0x03,
	0x40, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a,
	0x3b, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x76, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x45, 0x9a, 0x84, 0x9e, 0x03, 0x40, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a,
	0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x3b, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x66, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x35, 0x9a, 0x84, 0x9e, 0x03,
	0x30, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a,
	0x22, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x42, 0x41, 0x48, 0x02, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x61, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_dbmodel_key_proto_rawDescOnce sync.Once
	file_models_dbmodel_key_proto_rawDescData = file_models_dbmodel_key_proto_rawDesc
)

func file_models_dbmodel_key_proto_rawDescGZIP() []byte {
	file_models_dbmodel_key_proto_rawDescOnce.Do(func() {
		file_models_dbmodel_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_dbmodel_key_proto_rawDescData)
	})
	return file_models_dbmodel_key_proto_rawDescData
}

var file_models_dbmodel_key_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_dbmodel_key_proto_goTypes = []interface{}{
	(*Key)(nil),             // 0: models.dbmodel.Key
	(*types.ID)(nil),        // 1: types.ID
	(*types.Timestamp)(nil), // 2: types.Timestamp
	(*types.DeletedAt)(nil), // 3: types.DeletedAt
}
var file_models_dbmodel_key_proto_depIdxs = []int32{
	1, // 0: models.dbmodel.Key.id:type_name -> types.ID
	2, // 1: models.dbmodel.Key.expires_at:type_name -> types.Timestamp
	2, // 2: models.dbmodel.Key.updated_at:type_name -> types.Timestamp
	2, // 3: models.dbmodel.Key.created_at:type_name -> types.Timestamp
	3, // 4: models.dbmodel.Key.deleted_at:type_name -> types.DeletedAt
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_models_dbmodel_key_proto_init() }
func file_models_dbmodel_key_proto_init() {
	if File_models_dbmodel_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_models_dbmodel_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_models_dbmodel_key_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_dbmodel_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_dbmodel_key_proto_goTypes,
		DependencyIndexes: file_models_dbmodel_key_proto_depIdxs,
		MessageInfos:      file_models_dbmodel_key_proto_msgTypes,
	}.Build()
	File_models_dbmodel_key_proto = out.File
	file_models_dbmodel_key_proto_rawDesc = nil
	file_models_dbmodel_key_proto_goTypes = nil
	file_models_dbmodel_key_proto_depIdxs = nil
}
