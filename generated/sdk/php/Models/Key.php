<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: models/key.proto

namespace Models;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>models.Key</code>
 */
class Key extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.types.ID id = 1 [json_name = "id", (.tagger.tags) = "json:\"id\" gorm:\"primary_key\""];</code>
     */
    protected $id = null;
    /**
     * Generated from protobuf field <code>string private_key = 2 [json_name = "privateKey", (.tagger.tags) = "json:\"private_key\""];</code>
     */
    protected $private_key = '';
    /**
     * Generated from protobuf field <code>string public_key = 3 [json_name = "publicKey", (.tagger.tags) = "json:\"public_key\""];</code>
     */
    protected $public_key = '';
    /**
     * Generated from protobuf field <code>bool should_rotate = 4 [json_name = "shouldRotate", (.tagger.tags) = "json:\"should_rotate\" gorm:\"default:false; index; not null\""];</code>
     */
    protected $should_rotate = false;
    /**
     * Generated from protobuf field <code>optional string rotated_from_id = 5 [json_name = "rotatedFromId", (.tagger.tags) = "json:\"rotated_from_id\" gorm:\"index\""];</code>
     */
    protected $rotated_from_id = null;
    /**
     * Generated from protobuf field <code>optional string rotate_cron = 6 [json_name = "rotateCron", (.tagger.tags) = "json:\"rotate_cron\" gorm:\"default:\'0 0 0 1 * *\'\""];</code>
     */
    protected $rotate_cron = null;
    /**
     * Generated from protobuf field <code>.types.Timestamp expires_at = 9 [json_name = "expiresAt", (.tagger.tags) = "json:\"expires_at\" gorm:\"index; type:timestamptz\""];</code>
     */
    protected $expires_at = null;
    /**
     * Generated from protobuf field <code>.types.Timestamp updated_at = 10 [json_name = "updatedAt", (.tagger.tags) = "json:\"updated_at\" gorm:\"index; type:timestamptz; autoCreateTime\""];</code>
     */
    protected $updated_at = null;
    /**
     * Generated from protobuf field <code>.types.Timestamp created_at = 11 [json_name = "createdAt", (.tagger.tags) = "json:\"created_at\" gorm:\"index; type:timestamptz; autoUpdateTime\""];</code>
     */
    protected $created_at = null;
    /**
     * Generated from protobuf field <code>.types.DeletedAt deleted_at = 12 [json_name = "deletedAt", (.tagger.tags) = "json:\"deleted_at\" gorm:\"index; type:timestamptz\""];</code>
     */
    protected $deleted_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Types\ID $id
     *     @type string $private_key
     *     @type string $public_key
     *     @type bool $should_rotate
     *     @type string $rotated_from_id
     *     @type string $rotate_cron
     *     @type \Types\Timestamp $expires_at
     *     @type \Types\Timestamp $updated_at
     *     @type \Types\Timestamp $created_at
     *     @type \Types\DeletedAt $deleted_at
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Models\Key::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.types.ID id = 1 [json_name = "id", (.tagger.tags) = "json:\"id\" gorm:\"primary_key\""];</code>
     * @return \Types\ID|null
     */
    public function getId()
    {
        return $this->id;
    }

    public function hasId()
    {
        return isset($this->id);
    }

    public function clearId()
    {
        unset($this->id);
    }

    /**
     * Generated from protobuf field <code>.types.ID id = 1 [json_name = "id", (.tagger.tags) = "json:\"id\" gorm:\"primary_key\""];</code>
     * @param \Types\ID $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkMessage($var, \Types\ID::class);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string private_key = 2 [json_name = "privateKey", (.tagger.tags) = "json:\"private_key\""];</code>
     * @return string
     */
    public function getPrivateKey()
    {
        return $this->private_key;
    }

    /**
     * Generated from protobuf field <code>string private_key = 2 [json_name = "privateKey", (.tagger.tags) = "json:\"private_key\""];</code>
     * @param string $var
     * @return $this
     */
    public function setPrivateKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->private_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string public_key = 3 [json_name = "publicKey", (.tagger.tags) = "json:\"public_key\""];</code>
     * @return string
     */
    public function getPublicKey()
    {
        return $this->public_key;
    }

    /**
     * Generated from protobuf field <code>string public_key = 3 [json_name = "publicKey", (.tagger.tags) = "json:\"public_key\""];</code>
     * @param string $var
     * @return $this
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->public_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool should_rotate = 4 [json_name = "shouldRotate", (.tagger.tags) = "json:\"should_rotate\" gorm:\"default:false; index; not null\""];</code>
     * @return bool
     */
    public function getShouldRotate()
    {
        return $this->should_rotate;
    }

    /**
     * Generated from protobuf field <code>bool should_rotate = 4 [json_name = "shouldRotate", (.tagger.tags) = "json:\"should_rotate\" gorm:\"default:false; index; not null\""];</code>
     * @param bool $var
     * @return $this
     */
    public function setShouldRotate($var)
    {
        GPBUtil::checkBool($var);
        $this->should_rotate = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string rotated_from_id = 5 [json_name = "rotatedFromId", (.tagger.tags) = "json:\"rotated_from_id\" gorm:\"index\""];</code>
     * @return string
     */
    public function getRotatedFromId()
    {
        return isset($this->rotated_from_id) ? $this->rotated_from_id : '';
    }

    public function hasRotatedFromId()
    {
        return isset($this->rotated_from_id);
    }

    public function clearRotatedFromId()
    {
        unset($this->rotated_from_id);
    }

    /**
     * Generated from protobuf field <code>optional string rotated_from_id = 5 [json_name = "rotatedFromId", (.tagger.tags) = "json:\"rotated_from_id\" gorm:\"index\""];</code>
     * @param string $var
     * @return $this
     */
    public function setRotatedFromId($var)
    {
        GPBUtil::checkString($var, True);
        $this->rotated_from_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string rotate_cron = 6 [json_name = "rotateCron", (.tagger.tags) = "json:\"rotate_cron\" gorm:\"default:\'0 0 0 1 * *\'\""];</code>
     * @return string
     */
    public function getRotateCron()
    {
        return isset($this->rotate_cron) ? $this->rotate_cron : '';
    }

    public function hasRotateCron()
    {
        return isset($this->rotate_cron);
    }

    public function clearRotateCron()
    {
        unset($this->rotate_cron);
    }

    /**
     * Generated from protobuf field <code>optional string rotate_cron = 6 [json_name = "rotateCron", (.tagger.tags) = "json:\"rotate_cron\" gorm:\"default:\'0 0 0 1 * *\'\""];</code>
     * @param string $var
     * @return $this
     */
    public function setRotateCron($var)
    {
        GPBUtil::checkString($var, True);
        $this->rotate_cron = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp expires_at = 9 [json_name = "expiresAt", (.tagger.tags) = "json:\"expires_at\" gorm:\"index; type:timestamptz\""];</code>
     * @return \Types\Timestamp|null
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    public function hasExpiresAt()
    {
        return isset($this->expires_at);
    }

    public function clearExpiresAt()
    {
        unset($this->expires_at);
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp expires_at = 9 [json_name = "expiresAt", (.tagger.tags) = "json:\"expires_at\" gorm:\"index; type:timestamptz\""];</code>
     * @param \Types\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Types\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp updated_at = 10 [json_name = "updatedAt", (.tagger.tags) = "json:\"updated_at\" gorm:\"index; type:timestamptz; autoCreateTime\""];</code>
     * @return \Types\Timestamp|null
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    public function hasUpdatedAt()
    {
        return isset($this->updated_at);
    }

    public function clearUpdatedAt()
    {
        unset($this->updated_at);
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp updated_at = 10 [json_name = "updatedAt", (.tagger.tags) = "json:\"updated_at\" gorm:\"index; type:timestamptz; autoCreateTime\""];</code>
     * @param \Types\Timestamp $var
     * @return $this
     */
    public function setUpdatedAt($var)
    {
        GPBUtil::checkMessage($var, \Types\Timestamp::class);
        $this->updated_at = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp created_at = 11 [json_name = "createdAt", (.tagger.tags) = "json:\"created_at\" gorm:\"index; type:timestamptz; autoUpdateTime\""];</code>
     * @return \Types\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * Generated from protobuf field <code>.types.Timestamp created_at = 11 [json_name = "createdAt", (.tagger.tags) = "json:\"created_at\" gorm:\"index; type:timestamptz; autoUpdateTime\""];</code>
     * @param \Types\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Types\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.DeletedAt deleted_at = 12 [json_name = "deletedAt", (.tagger.tags) = "json:\"deleted_at\" gorm:\"index; type:timestamptz\""];</code>
     * @return \Types\DeletedAt|null
     */
    public function getDeletedAt()
    {
        return $this->deleted_at;
    }

    public function hasDeletedAt()
    {
        return isset($this->deleted_at);
    }

    public function clearDeletedAt()
    {
        unset($this->deleted_at);
    }

    /**
     * Generated from protobuf field <code>.types.DeletedAt deleted_at = 12 [json_name = "deletedAt", (.tagger.tags) = "json:\"deleted_at\" gorm:\"index; type:timestamptz\""];</code>
     * @param \Types\DeletedAt $var
     * @return $this
     */
    public function setDeletedAt($var)
    {
        GPBUtil::checkMessage($var, \Types\DeletedAt::class);
        $this->deleted_at = $var;

        return $this;
    }

}

