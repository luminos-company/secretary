// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: models/key.proto

package models

import (
	types "github.com/luminos-company/secretary/generated/types"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            *types.ID        `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" gorm:"primary_key;auto_increment"`
	PrivateKey    string           `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"private_key" gorm:"not null"`
	PublicKey     string           `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"public_key" gorm:"unique"`
	ShouldRotate  bool             `protobuf:"varint,4,opt,name=ShouldRotate,proto3" json:"should_rotate" gorm:"index"`
	RotatedFromId *string          `protobuf:"bytes,5,opt,name=RotatedFromId,proto3,oneof" json:"rotated_from_id" gorm:"index"`
	RotateCron    string           `protobuf:"bytes,6,opt,name=RotateCron,proto3" json:"rotate_cron" gorm:"not null"`
	CreatedAt     *types.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"created_at" gorm:"index;autoCreateTime; type:timestamptz"`
	UpdatedAt     *types.Timestamp `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"updated_at" gorm:"index;autoUpdateTime; type:timestamptz"`
	ExpiresAt     *types.Timestamp `protobuf:"bytes,9,opt,name=ExpiresAt,proto3" json:"expires_at" gorm:"index; type:timestamptz"`
	DeletedAt     *types.Timestamp `protobuf:"bytes,10,opt,name=DeletedAt,proto3" json:"deleted_at" gorm:"index; type:timestamptz"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetID() *types.ID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Key) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *Key) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Key) GetShouldRotate() bool {
	if x != nil {
		return x.ShouldRotate
	}
	return false
}

func (x *Key) GetRotatedFromId() string {
	if x != nil && x.RotatedFromId != nil {
		return *x.RotatedFromId
	}
	return ""
}

func (x *Key) GetRotateCron() string {
	if x != nil {
		return x.RotateCron
	}
	return ""
}

func (x *Key) GetCreatedAt() *types.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Key) GetUpdatedAt() *types.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Key) GetExpiresAt() *types.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Key) GetDeletedAt() *types.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type KeyCreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldRotate bool             `protobuf:"varint,4,opt,name=ShouldRotate,proto3" json:"ShouldRotate,omitempty"`
	ExpiresAt    *types.Timestamp `protobuf:"bytes,7,opt,name=ExpiresAt,proto3" json:"ExpiresAt,omitempty"`
}

func (x *KeyCreator) Reset() {
	*x = KeyCreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyCreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyCreator) ProtoMessage() {}

func (x *KeyCreator) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyCreator.ProtoReflect.Descriptor instead.
func (*KeyCreator) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{1}
}

func (x *KeyCreator) GetShouldRotate() bool {
	if x != nil {
		return x.ShouldRotate
	}
	return false
}

func (x *KeyCreator) GetExpiresAt() *types.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *types.ID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{2}
}

func (x *SignRequest) GetID() *types.ID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *SignRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{3}
}

func (x *SignResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SignResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *types.ID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Message   string    `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Signature string    `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyRequest) GetID() *types.ID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *VerifyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=Verified,proto3" json:"Verified,omitempty"`
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type CryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *types.ID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CryptRequest) Reset() {
	*x = CryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptRequest) ProtoMessage() {}

func (x *CryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptRequest.ProtoReflect.Descriptor instead.
func (*CryptRequest) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{6}
}

func (x *CryptRequest) GetID() *types.ID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *CryptRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Cipher  string `protobuf:"bytes,2,opt,name=Cipher,proto3" json:"Cipher,omitempty"`
}

func (x *CryptResponse) Reset() {
	*x = CryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptResponse) ProtoMessage() {}

func (x *CryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptResponse.ProtoReflect.Descriptor instead.
func (*CryptResponse) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{7}
}

func (x *CryptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CryptResponse) GetCipher() string {
	if x != nil {
		return x.Cipher
	}
	return ""
}

type DecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *types.ID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Cipher string    `protobuf:"bytes,2,opt,name=Cipher,proto3" json:"Cipher,omitempty"`
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{8}
}

func (x *DecryptRequest) GetID() *types.ID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *DecryptRequest) GetCipher() string {
	if x != nil {
		return x.Cipher
	}
	return ""
}

type DecryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Cipher  string `protobuf:"bytes,2,opt,name=Cipher,proto3" json:"Cipher,omitempty"`
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{9}
}

func (x *DecryptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DecryptResponse) GetCipher() string {
	if x != nil {
		return x.Cipher
	}
	return ""
}

type KeyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=Keys,proto3" json:"Keys,omitempty"`
}

func (x *KeyList) Reset() {
	*x = KeyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyList) ProtoMessage() {}

func (x *KeyList) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyList.ProtoReflect.Descriptor instead.
func (*KeyList) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{10}
}

func (x *KeyList) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []*types.ID `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *IDList) Reset() {
	*x = IDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_key_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDList) ProtoMessage() {}

func (x *IDList) ProtoReflect() protoreflect.Message {
	mi := &file_models_key_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDList.ProtoReflect.Descriptor instead.
func (*IDList) Descriptor() ([]byte, []int) {
	return file_models_key_proto_rawDescGZIP(), []int{11}
}

func (x *IDList) GetIDs() []*types.ID {
	if x != nil {
		return x.IDs
	}
	return nil
}

var File_models_key_proto protoreflect.FileDescriptor

var file_models_key_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x95, 0x07, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x42,
	0x30, 0x9a, 0x84, 0x9e, 0x03, 0x2b, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x20,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x3b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x52, 0x02, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x9a, 0x84, 0x9e, 0x03, 0x22,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x75, 0x6c,
	0x6c, 0x22, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x42,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x24, 0x9a, 0x84, 0x9e, 0x03, 0x1f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x4a, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x52, 0x0c, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x53,
	0x0a, 0x0d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0x9a, 0x84, 0x9e, 0x03, 0x23, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x48,
	0x00, 0x52, 0x0d, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0a, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x9a, 0x84, 0x9e, 0x03, 0x22, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x22,
	0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x22,
	0x52, 0x0a, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x44, 0x9a, 0x84, 0x9e, 0x03, 0x3f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x22, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x74, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x44, 0x9a, 0x84, 0x9e, 0x03, 0x3f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x20,
	0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x61, 0x75, 0x74, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x3a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x22, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x65, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x35, 0x9a,
	0x84, 0x9e, 0x03, 0x30, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x22, 0x20, 0x67, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x74, 0x7a, 0x22, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12,
	0x65, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x35, 0x9a, 0x84, 0x9e, 0x03, 0x30, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x20, 0x67, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x22, 0x52, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x0b, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46,
	0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x22, 0x43, 0x0a, 0x0c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x0e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x22,
	0x43, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x4b, 0x65, 0x79, 0x73,
	0x22, 0x25, 0x0a, 0x06, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x44, 0x52, 0x03, 0x49, 0x44, 0x73, 0x32, 0xe7, 0x03, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x4b, 0x65, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22, 0x05, 0x2f, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x09, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x4b, 0x65, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x4b, 0x65,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x09, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49,
	0x44, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x09, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x13, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x43, 0x72, 0x79, 0x70, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x39, 0x48, 0x02, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x61, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_key_proto_rawDescOnce sync.Once
	file_models_key_proto_rawDescData = file_models_key_proto_rawDesc
)

func file_models_key_proto_rawDescGZIP() []byte {
	file_models_key_proto_rawDescOnce.Do(func() {
		file_models_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_key_proto_rawDescData)
	})
	return file_models_key_proto_rawDescData
}

var file_models_key_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_models_key_proto_goTypes = []interface{}{
	(*Key)(nil),             // 0: models.Key
	(*KeyCreator)(nil),      // 1: models.KeyCreator
	(*SignRequest)(nil),     // 2: models.SignRequest
	(*SignResponse)(nil),    // 3: models.SignResponse
	(*VerifyRequest)(nil),   // 4: models.VerifyRequest
	(*VerifyResponse)(nil),  // 5: models.VerifyResponse
	(*CryptRequest)(nil),    // 6: models.CryptRequest
	(*CryptResponse)(nil),   // 7: models.CryptResponse
	(*DecryptRequest)(nil),  // 8: models.DecryptRequest
	(*DecryptResponse)(nil), // 9: models.DecryptResponse
	(*KeyList)(nil),         // 10: models.KeyList
	(*IDList)(nil),          // 11: models.IDList
	(*types.ID)(nil),        // 12: types.ID
	(*types.Timestamp)(nil), // 13: types.Timestamp
}
var file_models_key_proto_depIdxs = []int32{
	12, // 0: models.Key.ID:type_name -> types.ID
	13, // 1: models.Key.CreatedAt:type_name -> types.Timestamp
	13, // 2: models.Key.UpdatedAt:type_name -> types.Timestamp
	13, // 3: models.Key.ExpiresAt:type_name -> types.Timestamp
	13, // 4: models.Key.DeletedAt:type_name -> types.Timestamp
	13, // 5: models.KeyCreator.ExpiresAt:type_name -> types.Timestamp
	12, // 6: models.SignRequest.ID:type_name -> types.ID
	12, // 7: models.VerifyRequest.ID:type_name -> types.ID
	12, // 8: models.CryptRequest.ID:type_name -> types.ID
	12, // 9: models.DecryptRequest.ID:type_name -> types.ID
	0,  // 10: models.KeyList.Keys:type_name -> models.Key
	12, // 11: models.IDList.IDs:type_name -> types.ID
	1,  // 12: models.KeyService.CreateKey:input_type -> models.KeyCreator
	12, // 13: models.KeyService.GetKey:input_type -> types.ID
	11, // 14: models.KeyService.GetKeys:input_type -> models.IDList
	12, // 15: models.KeyService.RotateKey:input_type -> types.ID
	12, // 16: models.KeyService.DeleteKey:input_type -> types.ID
	2,  // 17: models.KeyService.Sign:input_type -> models.SignRequest
	4,  // 18: models.KeyService.Verify:input_type -> models.VerifyRequest
	6,  // 19: models.KeyService.Crypt:input_type -> models.CryptRequest
	8,  // 20: models.KeyService.Decrypt:input_type -> models.DecryptRequest
	0,  // 21: models.KeyService.CreateKey:output_type -> models.Key
	0,  // 22: models.KeyService.GetKey:output_type -> models.Key
	10, // 23: models.KeyService.GetKeys:output_type -> models.KeyList
	0,  // 24: models.KeyService.RotateKey:output_type -> models.Key
	0,  // 25: models.KeyService.DeleteKey:output_type -> models.Key
	3,  // 26: models.KeyService.Sign:output_type -> models.SignResponse
	5,  // 27: models.KeyService.Verify:output_type -> models.VerifyResponse
	7,  // 28: models.KeyService.Crypt:output_type -> models.CryptResponse
	9,  // 29: models.KeyService.Decrypt:output_type -> models.DecryptResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_models_key_proto_init() }
func file_models_key_proto_init() {
	if File_models_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_models_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyCreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_key_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_models_key_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_models_key_proto_goTypes,
		DependencyIndexes: file_models_key_proto_depIdxs,
		MessageInfos:      file_models_key_proto_msgTypes,
	}.Build()
	File_models_key_proto = out.File
	file_models_key_proto_rawDesc = nil
	file_models_key_proto_goTypes = nil
	file_models_key_proto_depIdxs = nil
}
